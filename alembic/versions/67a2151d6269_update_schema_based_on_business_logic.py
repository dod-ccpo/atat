"""update schema based on business logic

Revision ID: 67a2151d6269
Revises: 687fd43489d6
Create Date: 2019-12-02 14:16:24.902108

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "67a2151d6269"  # pragma: allowlist secret
down_revision = "687fd43489d6"  # pragma: allowlist secret
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "application_invitations",
        "application_role_id",
        existing_type=postgresql.UUID(),
        nullable=False,
    )
    op.alter_column(
        "application_invitations", "dod_id", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "application_invitations",
        "expiration_time",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "application_invitations",
        "first_name",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "application_invitations",
        "inviter_id",
        existing_type=postgresql.UUID(),
        nullable=False,
    )
    op.alter_column(
        "application_invitations",
        "last_name",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "application_invitations", "token", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "application_roles",
        "status",
        existing_type=sa.VARCHAR(length=8),
        nullable=False,
    )
    op.alter_column("clins", "end_date", existing_type=sa.DATE(), nullable=False)
    op.alter_column(
        "clins", "jedi_clin_type", existing_type=sa.VARCHAR(length=11), nullable=False
    )
    op.alter_column("clins", "number", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "clins", "obligated_amount", existing_type=sa.NUMERIC(), nullable=False
    )
    op.alter_column("clins", "start_date", existing_type=sa.DATE(), nullable=False)
    op.alter_column("clins", "total_amount", existing_type=sa.NUMERIC(), nullable=False)
    op.alter_column(
        "environment_roles",
        "status",
        existing_type=sa.VARCHAR(length=9),
        nullable=False,
    )
    op.alter_column(
        "portfolio_invitations", "dod_id", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "portfolio_invitations",
        "expiration_time",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=False,
    )
    op.alter_column(
        "portfolio_invitations",
        "first_name",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.alter_column(
        "portfolio_invitations",
        "inviter_id",
        existing_type=postgresql.UUID(),
        nullable=False,
    )
    op.alter_column(
        "portfolio_invitations", "last_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "portfolio_invitations",
        "portfolio_role_id",
        existing_type=postgresql.UUID(),
        nullable=False,
    )
    op.alter_column(
        "portfolio_invitations", "token", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "portfolio_roles", "status", existing_type=sa.VARCHAR(length=8), nullable=False
    )
    op.alter_column(
        "portfolios", "defense_component", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("portfolios", "name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "task_orders", "portfolio_id", existing_type=postgresql.UUID(), nullable=False
    )
    op.drop_constraint("task_orders_user_id_fkey", "task_orders", type_="foreignkey")
    op.drop_column("task_orders", "user_id")
    op.alter_column("users", "first_name", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("users", "last_name", existing_type=sa.VARCHAR(), nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("users", "last_name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("users", "first_name", existing_type=sa.VARCHAR(), nullable=True)
    op.add_column(
        "task_orders",
        sa.Column("user_id", postgresql.UUID(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "task_orders_user_id_fkey", "task_orders", "users", ["user_id"], ["id"]
    )
    op.alter_column(
        "task_orders", "portfolio_id", existing_type=postgresql.UUID(), nullable=True
    )
    op.alter_column("portfolios", "name", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "portfolios", "defense_component", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "portfolio_roles", "status", existing_type=sa.VARCHAR(length=8), nullable=True
    )
    op.alter_column(
        "portfolio_invitations", "token", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "portfolio_invitations",
        "portfolio_role_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    op.alter_column(
        "portfolio_invitations", "last_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "portfolio_invitations",
        "inviter_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    op.alter_column(
        "portfolio_invitations", "first_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "portfolio_invitations",
        "expiration_time",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "portfolio_invitations", "dod_id", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "environment_roles", "status", existing_type=sa.VARCHAR(length=9), nullable=True
    )
    op.alter_column("clins", "total_amount", existing_type=sa.NUMERIC(), nullable=True)
    op.alter_column("clins", "start_date", existing_type=sa.DATE(), nullable=True)
    op.alter_column(
        "clins", "obligated_amount", existing_type=sa.NUMERIC(), nullable=True
    )
    op.alter_column("clins", "number", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "clins", "jedi_clin_type", existing_type=sa.VARCHAR(length=11), nullable=True
    )
    op.alter_column("clins", "end_date", existing_type=sa.DATE(), nullable=True)
    op.alter_column(
        "application_roles", "status", existing_type=sa.VARCHAR(length=8), nullable=True
    )
    op.alter_column(
        "application_invitations", "token", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "application_invitations",
        "last_name",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "application_invitations",
        "inviter_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    op.alter_column(
        "application_invitations",
        "first_name",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.alter_column(
        "application_invitations",
        "expiration_time",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        nullable=True,
    )
    op.alter_column(
        "application_invitations", "dod_id", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "application_invitations",
        "application_role_id",
        existing_type=postgresql.UUID(),
        nullable=True,
    )
    # ### end Alembic commands ###
