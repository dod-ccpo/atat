# deploy
---
- name: sdhow tf_vars
  debug:
    msg: "{{ app_kv_tf | to_nice_json }}"

- debug:
    msg: "{{ lookup('env','TF_VAR_OPS_OID') }} {{ lookup('env','TF_VAR_OPS_SEC') }}"

- name: set tf_dir
  set_fact:
    tf_dir: "{{ tf_base_dir }}"

- name: tf apply (modules)
  terraform:
    project_path: "{{ tf_base_dir }}/{{ tf_subdir }}"
    state: "present"
    targets: "{{ target_modules }}"
    variables: "{{ app_kv_tf }}"
    backend_config: "{{ b_end }}"
  register: tf_run_modules
  environment:
    ARM_SUBSCRIPTION_ID: "{{ application_subscription_id }}"
    TF_VAR_environment: "{{ tf_bootstrap_backend_outputs.environment.value }}"

  when:
    - target_modules is defined
    - b_end is defined

- name: tf apply (no modules)
  terraform:
    force_init: "{{ init_tf }}"
    project_path: "{{ tf_base_dir }}/{{ tf_subdir }}"
    state: "present"
    variables: "{{ app_kv_tf }}"
    backend_config: "{{ b_end }}"
  register: tf_run
  environment:
    ARM_SUBSCRIPTION_ID: "{{ application_subscription_id }}"
    TF_VAR_OPS_OID: "{{ lookup('env','TF_VAR_OPS_OID') }}"
    TF_VAR_OPS_SEC: "{{ lookup('env','TF_VAR_OPS_SEC') }}"
    TF_VAR_dhparam4096: "{{ lookup('file','{{playbook_dir}}/dh/dhparams.pem')}}"
    TF_VAR_environment: "{{ tf_bootstrap_backend_outputs.environment.value }}"
  when:
    - target_modules is not defined
    - b_end is defined

- debug:
    msg: "{{ tf_run }}"
