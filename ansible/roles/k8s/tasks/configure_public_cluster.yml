---
- name: Connect to the {{ environment }} kubernetes cluster
  shell: "az aks get-credentials -g cloudzero-vpc-{{ environment }} -n cloudzero-k8s-{{ environment }}"

- name: Create {{ environment }} namespace
  k8s:
    kind: Namespace
    state: present
    name: "{{ environment }}"

- name: "Attach the ACR to the K8s cluster"
  shell:
    cmd: az aks update -n cloudzero-k8s-{{environment}} -g cloudzero-vpc-{{environment}} --attach-acr {{container_registry_name}}

- name: Assign Network Contributor role to the AKS Service Principal for the Virtual Network
  shell:
    cmd: az role assignment create --role "Network Contributor" --assignee {{ aks_sp_id }} --scope {{vnet_id }}

- name: Get vmss
  shell:
    cmd: az vmss list --resource-group {{ k8s_node_group }}
  register: k8s_vmss

- name: show vmss output
  debug:
    msg: "{{ k8s_vmss.stdout | from_json  }}"

- name: Assign the Vault Reader identity to the AKS VMSS
  shell:
    cmd: az vmss identity assign -g {{ k8s_node_group }} -n {{ (k8s_vmss.stdout | from_json)[0].name }} --identities {{ keyvault_reader_id }}

- name: Apply the storage class
  k8s:
    state: present
    src: /src/deploy/azure/storage-class.yml

- name: Create kv namespace
  k8s:
    kind: Namespace
    state: present
    name: "kv"

- name: Apply flex vol installer
  k8s:
    state: present
    src: /src/deploy/azure/keyvault/kv-flex-vol-installer.yml

- name: Fetch latest `atat` image from {{ container_registry_name }}
  shell: az acr repository show-tags --top 1 --orderby time_desc --repository atat --name {{ container_registry_name }}
  register: atat_images
  retries: 100
  delay: 10
  until: atat_images is not failed

- name: Extract latest tag
  set_fact:
    latest_tag: "{{ (atat_images.stdout | from_json)[0] }}"

- name: Fetch latest `nginx` image from {{ container_registry_name }}
  shell: az acr repository show-tags --top 1 --orderby time_desc --repository nginx --name {{ container_registry_name }}
  register: nginx_images
  retries: 100
  delay: 10
  until: nginx_images is not failed

- name: Extract latest nginx tag
  set_fact:
    latest_nginx_tag: "{{ (nginx_images.stdout | from_json)[0] }}"

- name: Show variable "atat_images"
  debug:
    msg: "{{ atat_images }}"

- name: Show variable "latest_tag"
  debug:
    msg: "{{ latest_tag }}"

- name: Show variable "nginx_images"
  debug:
    msg: "{{ nginx_images }}"

- name: Show variable "latest_nginx_tag"
  debug:
    msg: "{{ latest_nginx_tag }}"

- name: Show output directory
  debug:
    msg: "{{ playbook_dir + '/.out.' + environment }}"

- name: Apply the rest of the Kubernetes config for the site
  shell: /src/script/k8s_config {{ playbook_dir + '/.out' }} | kubectl apply -f -
  environment:
    CONTAINER_IMAGE: "{{ container_registry_name }}.azurecr.io/atat:{{ latest_tag }}"
    NGINX_CONTAINER_IMAGE: "{{ container_registry_name }}.azurecr.io/nginx:{{ latest_nginx_tag }}"
    MAIN_DOMAIN: "{{ environment }}.atat.dev"
    AUTH_DOMAIN: "auth-{{ environment }}.atat.dev"
    VMSS_CLIENT_ID: "{{ keyvault_reader_client_id }}"
    KV_NAME: "cz-keyvault-{{ environment }}"
    TENANT_ID: "{{ tenant_id }}"
    DEPLOY_TAG: "tf-{{ deploy_tag | regex_replace('\\.','-') }}"

- name: Obtain IP addresses
  shell: kubectl -n {{ environment }} get services
  register: ips

- name: Show IP addresses
  debug:
    msg: "{{ ips }}"
