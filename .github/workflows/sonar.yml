---
name: Sonar Scan
on:
  workflow_run:
    workflows: ["Full CI Build"]
    types:
      - completed

jobs:
  sonarcloud:
    runs-on: ubuntu-20.04
    if: >
      ${{ github.event.workflow_run.event == 'pull_request'
          && github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download coverage artifacts
        uses: actions/github-script@v3
        with:
          # This unfortunately-complicated method of downloading the artifacts is required because
          # the download-arifacts action is only supported when the artifacts were uploaded within
          # the same workflow, which is not the case here. See
          # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
          # for more information.
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: ${{ github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                return artifact.name == 'coverage'
            })[0];
            var download = await github.actions.downloadArtifact({
                 owner: context.repo.owner,
                 repo: context.repo.repo,
                 artifact_id: matchArtifact.id,
                 archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{ github.workspace }}/coverage.zip', Buffer.from(download.data));
      - name: Unzip coverage reports
        run: unzip coverage.zip
      - name: Read the GIT reference used for the CI tests
        run: |
          echo "git_ref=$(cat ref.txt)" >> $GITHUB_ENV
      - name: Checkout Code
        # In general, checking out the code here, where we may have come from an untrusted context
        # would be a red flag. In this scenario, we will not be running the malicious code; just
        # analyzing it.
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ env.git_ref }}
          path: atat
      - name: Copy coverage reports
        run: |
          mv coverage atat
          mv coverage.xml atat
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: atat
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
